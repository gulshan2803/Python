1) difference() - The difference() method returns a set that contains the difference between two sets. The returned set contains items that exist only in the first set, and not in both sets. 
    
If A = {1, 2, 3, 4}
B = {2, 3, 9}

Then,
A - B = {1, 4}
B - A = {9}



The syntax of the set difference() method in Python is:
A.difference(B)


Example : How difference() works in Python?
A = {'a', 'b', 'c', 'd'}
B = {'c', 'f', 'g'}

# Equivalent to A-B
print(A.difference(B))

# Equivalent to B-A
print(B.difference(A))
Output

{'b', 'a', 'd'}
{'g', 'f'}







2) symmetric_difference() - The Python symmetric_difference() method returns the symmetric difference of two sets.The symmetric difference of two sets A and B is the set of elements that are in either A or B, but not in their intersection.

The syntax of symmetric_difference() is:
A.symmetric_difference(B)

Example 1: Working of symmetric_difference()
A = {'a', 'b', 'c', 'd'}
B = {'c', 'd', 'e' }
C = {}

print(A.symmetric_difference(B))
print(B.symmetric_difference(A))

print(A.symmetric_difference(C))
print(B.symmetric_difference(C))
Output

{'b', 'a', 'e'}
{'b', 'e', 'a'}
{'b', 'd', 'c', 'a'}
{'d', 'e', 'c'}

Symmetric difference using ^ operator
In Python, we can also find the symmetric difference using the ^ operator.

A = {'a', 'b', 'c', 'd'}
B = {'c', 'd', 'e' }

print(A ^ B)
print(B ^ A)

print(A ^ A)
print(B ^ B)
Output

{'e', 'a', 'b'}
{'e', 'a', 'b'}
set()
set()